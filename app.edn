;;; Application level configuration file.
;;;
;;; :base are the base values taken for :main and every :plugs.
;;; Every given value replaces value in the :base for its key.
;;;
;;; Then recursively every values in the key-values pairs are replaced :
;;; - If it's a key it's replaced by the associated key value until it's a string
;;; - If it's an list it's replaced by a string which is the concatenation
;;; of all the strings, given that keys are replaced too by the string 
;;; values associated.
;;; - If it's a map keyed values are transformed recursively.
;;; - If it's a vector values are transformed recursively.
;;;
{ :base 
  { :version "0.0.0"
    :resources "resources"
    :exec "main"
    :github "https://github.com/"
    :git {:git (:github :user "/" :project ".git")
          :homepage (:github :user "/" :project "/blob/master/README.md")} 
    :npm-user ("@" :user "/")
    :npm (:npm-user :project)
    :browser-exec-file (:exec ".js")
    :browser-exec (:project ".browser." :exec "/" :exec)
    :renderer (:resources "/js/" :exec ".js")
    :keywords 
    [ "electron"
      "clojurescript"
      "CLJStron"]}

  :main
  { :user "cljstron"
    :project :user
    :version "0.0.3"
    :npm-deps
      { :shadow-cljs "^2.0.49"} 
    :description "A library to manage and develop `electron` applications in `ClojureScript`... and `Clojure`?"    
    :cljs-deps
      [ ["camel-snake-kebab" "0.4.0"]
        ["com.cognitect/transit-cljs" "0.8.243"]
        ["cljs-node-io" "0.5.0"]
        ["org.clojure/tools.reader" "1.0.5"]]}

  :plugs
  { :simple 
    { :project "cljstron-simple"
      :window :exec}}}     
